{"version":3,"sources":["webpack:///../src/installation.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","type","parentName","isMDXComponent"],"mappings":"wPAOaA,G,UAAe,S,sMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,gBADR,gBAGA,+EACA,iBAAQ,CACN,GAAM,qBADR,qBAGA,4IAEA,YAAC,IAAD,CAAMC,KAAK,OAAOD,QAAQ,QAA1B,WACM,4CADN,iEAIA,uBAAK,gCAAME,WAAW,OAAU,CAC5B,UAAa,kBADZ,2KAQL,iBAAQ,CACN,GAAM,WADR,WAGA,yIAEA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+IAQL,iBAAQ,CACN,GAAM,SADR,SAGA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8a,oMAuBTL,EAAWM,gBAAiB","file":"component---src-installation-mdx-8e4585097b9f49c65fe5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/react-skeleton/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Hint } from '@nejcm/docz-theme-extended';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h1>\n    <p>{`React skeleton supports styled-components and emotion.`}</p>\n    <h2 {...{\n      \"id\": \"peer-dependencies\"\n    }}>{`Peer dependencies`}</h2>\n    <p>{`React skeleton requires the following peer dependencies to work. Make sure to\nhave them installed in your project.`}</p>\n    <Hint type=\"info\" mdxType=\"Hint\">\n  You can <strong>skip this step</strong> if those packages are already\n  installed in your application.\n    </Hint>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# for styled-components\n$ npm install react react-dom styled-components --save\n\n# for emotion\n$ npm install react react-dom @emotion/styled @emotion/core --save\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"package\"\n    }}>{`Package`}</h2>\n    <p>{`Install the latest version of React skeleton by running the following command in\nyour project's root directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# for styled-components\n$ npm install @nejcm/react-skeleton --save\n\n# for emotion\n$ npm install @nejcm/react-skeleton-emotion --save\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\n// for styled-components\nimport Skeleton, {Card, Comment} from '@nejcm/react-skeleton';\n// for emotion\nimport Skeleton, {Card, Comment} from '@nejcm/react-skeleton-emotion';\n\nconst YourComponent = () => {\n  return (\n    <Skeleton>\n      <Skeleton.Rectangle height={20} />\n      <Skeleton.Circle width={40} height={40} />\n    </Skeleton>\n  );\n};\n\nexport default YourComponent;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}